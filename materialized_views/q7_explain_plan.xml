<?xml version="1.0" encoding="utf-8"?>
<dsql_query number_nodes="2" number_distributions="60" number_distributions_per_node="30">
    <sql>select top 100 a.ca_state state, count(*) cnt   from customer_address a       ,customer c       ,store_sales s       ,date_dim d       ,item i   where       a.ca_address_sk = c.c_current_addr_sk    and c.c_customer_sk = s.ss_customer_sk    and s.ss_sold_date_sk = d.d_date_sk    and s.ss_item_sk = i.i_item_sk    and d.d_month_seq =          (select distinct (d_month_seq)          from date_dim                 where d_year = 2000            and d_moy = 2 )    and i.i_current_price &gt; 1.2 *                (select avg(j.i_current_price)          from item j          where j.i_category = i.i_category)   group by a.ca_state   having count(*) &gt;= 10   order by cnt, a.ca_state</sql>
    <materialized_view_candidates>
        <materialized_view_candidates with_constants="False">CREATE MATERIALIZED VIEW View1 WITH (DISTRIBUTION = HASH([Expr0])) AS  SELECT [j].[i_category] AS [Expr0],         AVG([j].[i_current_price]) AS [Expr1]  FROM [tpcds].[item] [j]  GROUP BY [j].[i_category]</materialized_view_candidates>
        <materialized_view_candidates with_constants="False">CREATE MATERIALIZED VIEW View2 WITH (DISTRIBUTION = HASH([Expr0])) AS  SELECT [DemoDW].[tpcds].[date_dim].[d_month_seq] AS [Expr0],         [DemoDW].[tpcds].[date_dim].[d_year] AS [Expr1],         [DemoDW].[tpcds].[date_dim].[d_moy] AS [Expr2]  FROM [tpcds].[date_dim]  GROUP BY [DemoDW].[tpcds].[date_dim].[d_month_seq],           [DemoDW].[tpcds].[date_dim].[d_year],           [DemoDW].[tpcds].[date_dim].[d_moy]</materialized_view_candidates>
        <materialized_view_candidates with_constants="True">CREATE MATERIALIZED VIEW View3 WITH (DISTRIBUTION = HASH([Expr0])) AS  SELECT [j].[i_category] AS [Expr0],         AVG([j].[i_current_price]) AS [Expr1]  FROM [tpcds].[item] [j]  WHERE [j].[i_category] IS NOT NULL  GROUP BY [j].[i_category]</materialized_view_candidates>
        <materialized_view_candidates with_constants="True">CREATE MATERIALIZED VIEW View4 WITH (DISTRIBUTION = HASH([Expr0])) AS  SELECT [DemoDW].[tpcds].[date_dim].[d_month_seq] AS [Expr0]  FROM [tpcds].[date_dim]  WHERE ([DemoDW].[tpcds].[date_dim].[d_year]=(2000))    AND ([DemoDW].[tpcds].[date_dim].[d_moy]=(2))  GROUP BY [DemoDW].[tpcds].[date_dim].[d_month_seq]</materialized_view_candidates>
    </materialized_view_candidates>
    <dsql_operations total_cost="0.0024" total_number_operations="4">
        <dsql_operation operation_type="ON">
            <location permanent="false" distribution="Control" />
            <sql_operations>
                <sql_operation type="statement">CREATE TABLE [tempdb].[QTables].[QTable_7a0a6574181a4da1950923ffcdaf2f60] ([ca_state] CHAR(2) COLLATE SQL_Latin1_General_CP1_CI_AS, [col] BIGINT ) WITH(DISTRIBUTED_MOVE_FILE='');</sql_operation>
            </sql_operations>
        </dsql_operation>
        <dsql_operation operation_type="PARTITION_MOVE">
            <operation_cost cost="0.0024" accumulative_cost="0.0024" average_rowsize="10" output_rows="1" GroupNumber="160" />
            <location distribution="AllDistributions" />
            <source_statement>SELECT [T1_1].[ca_state] AS [ca_state], [T1_1].[col] AS [col] FROM (SELECT COUNT_BIG(CAST ((0) AS INT)) AS [col], [T2_2].[ca_state] AS [ca_state] FROM (SELECT [T3_1].[i_item_sk] AS [i_item_sk] FROM (SELECT [T4_1].[i_category] AS [i_category], [T4_1].[i_current_price] AS [i_current_price], [T4_1].[i_item_sk] AS [i_item_sk] FROM [DemoDW].[tpcds].[item] AS T4_1 WHERE (([T4_1].[i_current_price] IS NOT NULL) AND ([T4_1].[i_category] IS NOT NULL))) AS T3_1 INNER JOIN  (SELECT AVG([T4_1].[i_current_price]) AS [col], [T4_1].[i_category] AS [i_category] FROM [DemoDW].[tpcds].[item] AS T4_1 WHERE ([T4_1].[i_category] IS NOT NULL) GROUP BY [T4_1].[i_category]) AS T3_2  ON (([T3_1].[i_category] = [T3_2].[i_category]) AND ([T3_1].[i_current_price] &gt; (CAST ((1.2) AS DECIMAL (2, 1)) * [T3_2].[col])))) AS T2_1 INNER JOIN  (SELECT [T3_2].[ss_item_sk] AS [ss_item_sk], [T3_2].[ca_state] AS [ca_state] FROM (SELECT CASE   WHEN ([T4_1].[col] &gt; CAST ((1) AS BIGINT)) THEN (SELECT [T5_1].[assrt] AS [assrt] FROM (VALUES (CONVERT (INT, NULL, 0)), (CONVERT (INT, NULL, 0))) AS T5_1(assrt))   ELSE [T4_1].[col1]  END AS [col] FROM (SELECT COUNT_BIG(CAST ((0) AS INT)) AS [col], MAX([T5_1].[d_month_seq]) AS [col1] FROM (SELECT [T6_1].[d_month_seq] AS [d_month_seq] FROM (SELECT [T7_1].[d_month_seq] AS [d_month_seq] FROM [DemoDW].[tpcds].[date_dim] AS T7_1 WHERE (([T7_1].[d_year] = CAST ((2000) AS INT)) AND ([T7_1].[d_moy] = CAST ((2) AS INT)))) AS T6_1 GROUP BY [T6_1].[d_month_seq]) AS T5_1) AS T4_1) AS T3_1 INNER JOIN  (SELECT [T4_2].[d_month_seq] AS [d_month_seq], [T4_2].[ss_item_sk] AS [ss_item_sk], [T4_1].[ca_state] AS [ca_state] FROM [DemoDW].[tpcds].[customer_address] AS T4_1 INNER JOIN  (SELECT [T5_1].[c_current_addr_sk] AS [c_current_addr_sk], [T5_2].[d_month_seq] AS [d_month_seq], [T5_2].[ss_item_sk] AS [ss_item_sk] FROM (SELECT [T6_1].[c_customer_sk] AS [c_customer_sk], [T6_1].[c_current_addr_sk] AS [c_current_addr_sk] FROM [DemoDW].[tpcds].[customer] AS T6_1 WHERE ([T6_1].[c_current_addr_sk] IS NOT NULL)) AS T5_1 INNER JOIN  (SELECT [T6_1].[ss_customer_sk] AS [ss_customer_sk], [T6_2].[d_month_seq] AS [d_month_seq], [T6_1].[ss_item_sk] AS [ss_item_sk] FROM (SELECT [T7_1].[ss_sold_date_sk] AS [ss_sold_date_sk], [T7_1].[ss_customer_sk] AS [ss_customer_sk], [T7_1].[ss_item_sk] AS [ss_item_sk] FROM [DemoDW].[tpcds].[store_sales] AS T7_1 WHERE (([T7_1].[ss_sold_date_sk] IS NOT NULL) AND ([T7_1].[ss_customer_sk] IS NOT NULL))) AS T6_1 INNER JOIN  (SELECT [T7_1].[d_date_sk] AS [d_date_sk], [T7_1].[d_month_seq] AS [d_month_seq] FROM [DemoDW].[tpcds].[date_dim] AS T7_1 WHERE ([T7_1].[d_month_seq] IS NOT NULL)) AS T6_2  ON ([T6_1].[ss_sold_date_sk] = [T6_2].[d_date_sk])) AS T5_2  ON ([T5_1].[c_customer_sk] = [T5_2].[ss_customer_sk])) AS T4_2  ON ([T4_1].[ca_address_sk] = [T4_2].[c_current_addr_sk])) AS T3_2  ON ([T3_1].[col] = [T3_2].[d_month_seq])) AS T2_2  ON ([T2_2].[ss_item_sk] = [T2_1].[i_item_sk]) GROUP BY [T2_2].[ca_state]) AS T1_1  OPTION (MAXDOP 2, MIN_GRANT_PERCENT = [MIN_GRANT], DISTRIBUTED_MOVE(N''))</source_statement>
            <destination>Control</destination>
            <destination_table>[QTable_7a0a6574181a4da1950923ffcdaf2f60]</destination_table>
        </dsql_operation>
        <dsql_operation operation_type="RETURN">
            <location distribution="Control" />
            <select>SELECT [T1_1].[ca_state] AS [ca_state], [T1_1].[col] AS [col] FROM (SELECT TOP (CAST ((100) AS BIGINT)) [T2_1].[ca_state] AS [ca_state], [T2_1].[col] AS [col] FROM (SELECT CONVERT (INT, [T3_1].[col], 0) AS [col], [T3_1].[ca_state] AS [ca_state] FROM (SELECT ISNULL([T4_1].[col], CONVERT (BIGINT, 0, 0)) AS [col], [T4_1].[ca_state] AS [ca_state] FROM (SELECT SUM([T5_1].[col]) AS [col], [T5_1].[ca_state] AS [ca_state] FROM [tempdb].[QTables].[QTable_7a0a6574181a4da1950923ffcdaf2f60] AS T5_1 GROUP BY [T5_1].[ca_state]) AS T4_1) AS T3_1) AS T2_1 WHERE ([T2_1].[col] &gt;= CAST ((10) AS INT)) ORDER BY [T2_1].[col] ASC, [T2_1].[ca_state] ASC) AS T1_1 ORDER BY [T1_1].[col] ASC, [T1_1].[ca_state] ASC  OPTION (MAXDOP 2, MIN_GRANT_PERCENT = [MIN_GRANT])</select>
        </dsql_operation>
        <dsql_operation operation_type="ON">
            <location permanent="false" distribution="Control" />
            <sql_operations>
                <sql_operation type="statement">DROP TABLE [tempdb].[QTables].[QTable_7a0a6574181a4da1950923ffcdaf2f60]</sql_operation>
            </sql_operations>
        </dsql_operation>
    </dsql_operations>
</dsql_query>