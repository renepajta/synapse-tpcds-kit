<?xml version="1.0" encoding="utf-8"?>
<dsql_query number_nodes="2" number_distributions="60" number_distributions_per_node="30">
    <sql>select top 100 dt.d_year          ,item.i_brand_id brand_id          ,item.i_brand brand         ,sum(ss_ext_sales_price) sum_agg   from  date_dim dt         ,store_sales        ,item   where dt.d_date_sk = store_sales.ss_sold_date_sk     and store_sales.ss_item_sk = item.i_item_sk     and item.i_manufact_id = 436     and dt.d_moy=12   group by dt.d_year        ,item.i_brand        ,item.i_brand_id   order by dt.d_year           ,sum_agg desc           ,brand_id</sql>
    <materialized_view_candidates>
        <materialized_view_candidates with_constants="False">CREATE MATERIALIZED VIEW View1 WITH (DISTRIBUTION = HASH([Expr0])) AS  SELECT [dt].[d_year] AS [Expr0],         [DemoDW].[tpcds].[item].[i_brand] AS [Expr1],         [DemoDW].[tpcds].[item].[i_brand_id] AS [Expr2],         [dt].[d_moy] AS [Expr3],         [DemoDW].[tpcds].[item].[i_manufact_id] AS [Expr4],         SUM([DemoDW].[tpcds].[store_sales].[ss_ext_sales_price]) AS [Expr5],         COUNT_BIG([DemoDW].[tpcds].[store_sales].[ss_ext_sales_price]) AS [Expr6]  FROM [tpcds].[date_dim] [dt],       [tpcds].[item],       [tpcds].[store_sales]  WHERE ([dt].[d_date_sk]=[DemoDW].[tpcds].[store_sales].[ss_sold_date_sk])    AND ([DemoDW].[tpcds].[store_sales].[ss_item_sk]=[DemoDW].[tpcds].[item].[i_item_sk])  GROUP BY [dt].[d_year],           [DemoDW].[tpcds].[item].[i_brand],           [DemoDW].[tpcds].[item].[i_brand_id],           [dt].[d_moy],           [DemoDW].[tpcds].[item].[i_manufact_id]</materialized_view_candidates>
        <materialized_view_candidates with_constants="True">CREATE MATERIALIZED VIEW View2 WITH (DISTRIBUTION = HASH([Expr0])) AS  SELECT [dt].[d_year] AS [Expr0],         [DemoDW].[tpcds].[item].[i_brand] AS [Expr1],         [DemoDW].[tpcds].[item].[i_brand_id] AS [Expr2],         SUM([DemoDW].[tpcds].[store_sales].[ss_ext_sales_price]) AS [Expr3],         COUNT_BIG([DemoDW].[tpcds].[store_sales].[ss_ext_sales_price]) AS [Expr4]  FROM [tpcds].[date_dim] [dt],       [tpcds].[item],       [tpcds].[store_sales]  WHERE ([dt].[d_date_sk]=[DemoDW].[tpcds].[store_sales].[ss_sold_date_sk])    AND ([dt].[d_moy]=(12))    AND ([DemoDW].[tpcds].[store_sales].[ss_item_sk]=[DemoDW].[tpcds].[item].[i_item_sk])    AND ([DemoDW].[tpcds].[item].[i_manufact_id]=(436))  GROUP BY [dt].[d_year],           [DemoDW].[tpcds].[item].[i_brand],           [DemoDW].[tpcds].[item].[i_brand_id]</materialized_view_candidates>
    </materialized_view_candidates>
    <dsql_operations total_cost="1.205829552" total_number_operations="5">
        <dsql_operation operation_type="RND_ID">
            <identifier>TEMP_ID_126</identifier>
        </dsql_operation>
        <dsql_operation operation_type="ON">
            <location permanent="false" distribution="AllComputeNodes" />
            <sql_operations>
                <sql_operation type="statement">CREATE TABLE [qtabledb].[dbo].[TEMP_ID_126] ([d_year] INT, [i_brand_id] INT, [i_brand] CHAR(50) COLLATE SQL_Latin1_General_CP1_CI_AS, [col] DECIMAL(38, 2) ) WITH(DISTRIBUTED_MOVE_FILE='');</sql_operation>
            </sql_operations>
        </dsql_operation>
        <dsql_operation operation_type="BROADCAST_MOVE">
            <operation_cost cost="1.205829552" accumulative_cost="1.205829552" average_rowsize="67" output_rows="74.9894" GroupNumber="34" />
            <source_statement>SELECT [T1_1].[d_year] AS [d_year], [T1_1].[i_brand_id] AS [i_brand_id], [T1_1].[i_brand] AS [i_brand], [T1_1].[col] AS [col] FROM (SELECT SUM([T2_1].[ss_ext_sales_price]) AS [col], [T2_2].[d_year] AS [d_year], [T2_1].[i_brand_id] AS [i_brand_id], [T2_1].[i_brand] AS [i_brand] FROM (SELECT [T3_1].[ss_sold_date_sk] AS [ss_sold_date_sk], [T3_1].[ss_ext_sales_price] AS [ss_ext_sales_price], [T3_2].[i_brand] AS [i_brand], [T3_2].[i_brand_id] AS [i_brand_id] FROM (SELECT [T4_1].[ss_item_sk] AS [ss_item_sk], [T4_1].[ss_sold_date_sk] AS [ss_sold_date_sk], [T4_1].[ss_ext_sales_price] AS [ss_ext_sales_price] FROM [DemoDW].[tpcds].[store_sales] AS T4_1 WHERE ([T4_1].[ss_sold_date_sk] IS NOT NULL)) AS T3_1 INNER JOIN  (SELECT [T4_1].[i_item_sk] AS [i_item_sk], [T4_1].[i_brand] AS [i_brand], [T4_1].[i_brand_id] AS [i_brand_id] FROM [DemoDW].[tpcds].[item] AS T4_1 WHERE ([T4_1].[i_manufact_id] = CAST ((436) AS INT))) AS T3_2  ON ([T3_1].[ss_item_sk] = [T3_2].[i_item_sk])) AS T2_1 INNER JOIN  (SELECT [T3_1].[d_date_sk] AS [d_date_sk], [T3_1].[d_year] AS [d_year] FROM [DemoDW].[tpcds].[date_dim] AS T3_1 WHERE ([T3_1].[d_moy] = CAST ((12) AS INT))) AS T2_2  ON ([T2_2].[d_date_sk] = [T2_1].[ss_sold_date_sk]) GROUP BY [T2_2].[d_year], [T2_1].[i_brand], [T2_1].[i_brand_id]) AS T1_1  OPTION (MAXDOP 2, MIN_GRANT_PERCENT = [MIN_GRANT], DISTRIBUTED_MOVE(N''))</source_statement>
            <destination_table>[TEMP_ID_126]</destination_table>
        </dsql_operation>
        <dsql_operation operation_type="RETURN">
            <location distribution="ComputeNode" />
            <select>SELECT [T1_1].[d_year] AS [d_year], [T1_1].[i_brand_id] AS [i_brand_id], [T1_1].[i_brand] AS [i_brand], [T1_1].[col] AS [col] FROM (SELECT TOP (CAST ((100) AS BIGINT)) [T2_1].[d_year] AS [d_year], [T2_1].[i_brand_id] AS [i_brand_id], [T2_1].[i_brand] AS [i_brand], [T2_1].[col] AS [col] FROM (SELECT SUM([T3_1].[col]) AS [col], [T3_1].[d_year] AS [d_year], [T3_1].[i_brand_id] AS [i_brand_id], [T3_1].[i_brand] AS [i_brand] FROM [qtabledb].[dbo].[TEMP_ID_126] AS T3_1 GROUP BY [T3_1].[d_year], [T3_1].[i_brand], [T3_1].[i_brand_id]) AS T2_1 ORDER BY [T2_1].[d_year] ASC, [T2_1].[col] DESC, [T2_1].[i_brand_id] ASC) AS T1_1 ORDER BY [T1_1].[d_year] ASC, [T1_1].[col] DESC, [T1_1].[i_brand_id] ASC  OPTION (MAXDOP 2, MIN_GRANT_PERCENT = [MIN_GRANT])</select>
        </dsql_operation>
        <dsql_operation operation_type="ON">
            <location permanent="false" distribution="AllComputeNodes" />
            <sql_operations>
                <sql_operation type="statement">DROP TABLE [qtabledb].[dbo].[TEMP_ID_126]</sql_operation>
            </sql_operations>
        </dsql_operation>
    </dsql_operations>
</dsql_query>