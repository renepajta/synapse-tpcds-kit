#!/bin/bash

#-------------------------------------------------------------------------------

# Copyright 2015 Actian Corporation
 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
 
# http://www.apache.org/licenses/LICENSE-2.0
 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#-------------------------------------------------------------------------------

# This script runs the SQL generated by TPC_DS_Run.sh from the TPC SQL templates.

# It is written as an independent script to allow the tests to be run separately
# without having to run TPS_DS_Run.sh which would re-create all the data which
# can be time intensive.

#-------------------------------------------------------------------------------

# Parameters
#     $1 - Scale Factor - The size of the data to be generated in Gigabytes
#          e.g. 1 = 1Gb
#     $2 - Server URL - Synapse SQL DW Endpoint
#     $3 - Database name

#-------------------------------------------------------------------------------
SOURCE_DIR=tpcds-kit/tools

set -e
SCALE_FACTOR=$1
SYNAPSE_URL=$2
DATABASE=$3


SQL_DIR="../.scripts"
QUERY_DIR="../query_templates"
LOG_DIR="../.logs"
LOG_FILE=${LOG_DIR}/TPC_DS_Summary_Results.txt

echo ""
echo "Step 0 - Clean-up"
echo ""

cd tools
rm -fr ${LOG_DIR}/*
rm -fr ${SQL_DIR}/*

# Generate the SQL from the TPC templates

echo ""
echo "Step 1 - Generating SQL from TPC templates."
echo ""

for template_file in $(cat ${QUERY_DIR}/templates.lst); do

    template_name=`echo ${template_file} | awk -F '.' '{print $1}'`   

    ./dsqgen -template ${template_file} -directory ${QUERY_DIR} -output ${SQL_DIR} -dialect sqlserver -scale ${SCALE_FACTOR} -quiet Y

    mv ${SQL_DIR}/query_0.sql ${SQL_DIR}/${template_name}.sql

done

echo "TPC DS Style SQL Performance Test Results" > ${LOG_FILE}
echo "-----------------------------------------" >> ${LOG_FILE}
echo ""                                          >> ${LOG_FILE}
echo "Run time in seconds"                       >> ${LOG_FILE}
echo ""                                          >> ${LOG_FILE}

for sql_file in $(ls ${PWD}/${SQL_DIR}/*.sql); do

    # Extract the SQL name and no. for the Summary print
    sql_name=`echo ${sql_file} | awk -F 'scripts/' '{print $2}' | awk -F '.' '{print $1}'`
    sql_no=`echo ${sql_file} | awk -F 'scripts/' '{print $2}' | awk -F '.' '{print $1}' | sed 's/Query//'`

    echo "Running SQL Test ${sql_name}."

    # Note time at start of run
    Start_Time="$(date +%s%N)"

    # Run the SQL
    sql_to_run=`cat ${sql_file}; echo "\g"`

    sqlcmd -S ${SYNAPSE_URL} -d ${DATABASE} -U ${SYNAPSE_USER} -P ${SYNAPSE_USER_PWD} -I > ${LOG_DIR}/TPC_DS_${sql_name}_Results.out <<EOF
${sql_to_run}
EOF

    # Time at end of run and hence calculate duration
    Run_Time="$(($(date +%s%N)-${Start_Time}))"

    # Log the results - run time or FAILED
    if [ `grep "^E_US" ${LOG_DIR}/TPC_DS_${sql_name}_Results.out | wc -l` -gt 0 ]; then
        printf "${sql_name} : FAILED\n" >> ${LOG_FILE}
    else
        printf "${sql_name} : %5.2f\n" `bc <<< "scale = 2; (${Run_Time} / 1000000000)"` >> ${LOG_FILE}
    fi

done

#------------------------------------------------------------------------------#
#---------------------------- End of Shell Script -----------------------------#
#------------------------------------------------------------------------------#